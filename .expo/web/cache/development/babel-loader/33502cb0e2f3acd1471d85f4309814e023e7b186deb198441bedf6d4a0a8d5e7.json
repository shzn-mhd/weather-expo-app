{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useState, useEffect } from 'react';\nimport { Feather, EvilIcons, Fontisto, FontAwesome } from '@expo/vector-icons';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MainCard = function MainCard(props) {\n  var Icon = function Icon() {\n    if (props.icon === 'morning') {\n      return _jsx(Feather, {\n        name: \"sun\",\n        style: styles.cardIcon,\n        size: 40,\n        color: \"orange\"\n      });\n    }\n    if (props.icon === 'afternoon') {\n      return _jsx(Fontisto, {\n        name: \"day-cloudy\",\n        style: styles.cardIcon,\n        size: 40,\n        color: \"orange\"\n      });\n    }\n    if (props.icon === 'night') {\n      return _jsx(FontAwesome, {\n        name: \"moon-o\",\n        style: styles.cardIcon,\n        size: 40,\n        color: \"orange\"\n      });\n    }\n  };\n  var styles = StyleSheet.create({\n    card: {\n      backgroundColor: props.backgroundColor,\n      justifyContent: 'center',\n      alignItems: 'center',\n      margin: 10,\n      width: 110,\n      height: 210,\n      borderRadius: 10\n    },\n    refreshButton: {\n      position: 'absolute',\n      margin: 30,\n      alignSelf: 'flex-start'\n    },\n    cardText: {\n      color: 'white',\n      margin: 15,\n      fontSize: 20\n    },\n    cardIcon: {\n      color: 'white',\n      margin: 15\n    }\n  });\n  return _jsxs(View, {\n    style: styles.card,\n    children: [_jsx(Text, {\n      style: styles.cardText,\n      children: props.title\n    }), _jsx(Icon, {}), _jsx(Text, {\n      style: styles.cardText,\n      children: props.temperature\n    })]\n  });\n};\nexport default MainCard;","map":{"version":3,"names":["StatusBar","StyleSheet","Text","TouchableOpacity","View","useState","useEffect","Feather","EvilIcons","Fontisto","FontAwesome","jsx","_jsx","jsxs","_jsxs","MainCard","props","Icon","icon","name","style","styles","cardIcon","size","color","create","card","backgroundColor","justifyContent","alignItems","margin","width","height","borderRadius","refreshButton","position","alignSelf","cardText","fontSize","children","title","temperature"],"sources":["C:/Users/user/Desktop/Kishor/weather-react-native-main/components/MainCard.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { useState, useEffect } from 'react';\n// Icons\nimport { Feather, EvilIcons, Fontisto, FontAwesome } from '@expo/vector-icons';\n\nconst MainCard = (props) => {\n\n    const Icon = () => {\n        if (props.icon === 'morning') {\n            return (\n                <Feather name=\"sun\" style={styles.cardIcon} size={40} color=\"orange\" />\n            )\n        }\n        if (props.icon === 'afternoon') {\n            return (\n                <Fontisto name=\"day-cloudy\" style={styles.cardIcon} size={40} color=\"orange\" />\n            )\n        }\n        if (props.icon === 'night') {\n            return (\n                <FontAwesome name=\"moon-o\" style={styles.cardIcon} size={40} color=\"orange\" />\n            )\n        }\n    }\n\n    const styles = StyleSheet.create({\n        card: {\n            backgroundColor: props.backgroundColor,\n            justifyContent: 'center',\n            alignItems: 'center',\n            margin: 10,\n            width: 110,\n            height: 210,\n            borderRadius: 10,\n        },\n        refreshButton: {\n            position: 'absolute',\n            margin: 30,\n            alignSelf: 'flex-start'\n        },\n        cardText: {\n            color: 'white',\n            margin: 15,\n            fontSize: 20,\n        },\n        cardIcon: {\n            color: 'white',\n            margin: 15,\n\n        },\n    });\n\n    return (\n        <View style={styles.card}>\n            <Text style={styles.cardText}>{props.title}</Text>\n            <Icon></Icon>\n            <Text style={styles.cardText}>{props.temperature}</Text>\n        </View>\n    )\n}\n\nexport default MainCard"],"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAE5C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,SAASC,OAAO,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAE/E,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,KAAK,EAAK;EAExB,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAA,EAAS;IACf,IAAID,KAAK,CAACE,IAAI,KAAK,SAAS,EAAE;MAC1B,OACIN,IAAA,CAACL,OAAO;QAACY,IAAI,EAAC,KAAK;QAACC,KAAK,EAAEC,MAAM,CAACC,QAAS;QAACC,IAAI,EAAE,EAAG;QAACC,KAAK,EAAC;MAAQ,CAAE,CAAC;IAE/E;IACA,IAAIR,KAAK,CAACE,IAAI,KAAK,WAAW,EAAE;MAC5B,OACIN,IAAA,CAACH,QAAQ;QAACU,IAAI,EAAC,YAAY;QAACC,KAAK,EAAEC,MAAM,CAACC,QAAS;QAACC,IAAI,EAAE,EAAG;QAACC,KAAK,EAAC;MAAQ,CAAE,CAAC;IAEvF;IACA,IAAIR,KAAK,CAACE,IAAI,KAAK,OAAO,EAAE;MACxB,OACIN,IAAA,CAACF,WAAW;QAACS,IAAI,EAAC,QAAQ;QAACC,KAAK,EAAEC,MAAM,CAACC,QAAS;QAACC,IAAI,EAAE,EAAG;QAACC,KAAK,EAAC;MAAQ,CAAE,CAAC;IAEtF;EACJ,CAAC;EAED,IAAMH,MAAM,GAAGpB,UAAU,CAACwB,MAAM,CAAC;IAC7BC,IAAI,EAAE;MACFC,eAAe,EAAEX,KAAK,CAACW,eAAe;MACtCC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE,QAAQ;MACpBC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE,GAAG;MACXC,YAAY,EAAE;IAClB,CAAC;IACDC,aAAa,EAAE;MACXC,QAAQ,EAAE,UAAU;MACpBL,MAAM,EAAE,EAAE;MACVM,SAAS,EAAE;IACf,CAAC;IACDC,QAAQ,EAAE;MACNb,KAAK,EAAE,OAAO;MACdM,MAAM,EAAE,EAAE;MACVQ,QAAQ,EAAE;IACd,CAAC;IACDhB,QAAQ,EAAE;MACNE,KAAK,EAAE,OAAO;MACdM,MAAM,EAAE;IAEZ;EACJ,CAAC,CAAC;EAEF,OACIhB,KAAA,CAACV,IAAI;IAACgB,KAAK,EAAEC,MAAM,CAACK,IAAK;IAAAa,QAAA,GACrB3B,IAAA,CAACV,IAAI;MAACkB,KAAK,EAAEC,MAAM,CAACgB,QAAS;MAAAE,QAAA,EAAEvB,KAAK,CAACwB;IAAK,CAAO,CAAC,EAClD5B,IAAA,CAACK,IAAI,IAAO,CAAC,EACbL,IAAA,CAACV,IAAI;MAACkB,KAAK,EAAEC,MAAM,CAACgB,QAAS;MAAAE,QAAA,EAAEvB,KAAK,CAACyB;IAAW,CAAO,CAAC;EAAA,CACtD,CAAC;AAEf,CAAC;AAED,eAAe1B,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}