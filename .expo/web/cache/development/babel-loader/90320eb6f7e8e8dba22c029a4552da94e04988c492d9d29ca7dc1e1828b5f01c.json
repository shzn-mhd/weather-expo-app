{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nexport default function getConsultApi() {\n  var axios, Location, date, Hours, result, latitude, longitude;\n  return _regeneratorRuntime.async(function getConsultApi$(_context2) {\n    while (1) switch (_context2.prev = _context2.next) {\n      case 0:\n        axios = require('axios');\n        _context2.next = 3;\n        return _regeneratorRuntime.awrap(axios.get('https://geolocation-db.com/json/'));\n      case 3:\n        Location = _context2.sent;\n        date = new Date();\n        Hours = date.getHours() + ':' + String(date.getMinutes()).padStart(2, '0');\n        result = [];\n        _context2.next = 9;\n        return _regeneratorRuntime.awrap(Location.data.latitude);\n      case 9:\n        latitude = _context2.sent;\n        _context2.next = 12;\n        return _regeneratorRuntime.awrap(Location.data.longitude);\n      case 12:\n        longitude = _context2.sent;\n        _context2.next = 15;\n        return _regeneratorRuntime.awrap(axios.get('http://api.weatherstack.com/current ? access_key = d194e0f579aff2691e35ce8b7de17092 & q=${latiyude},${longtitude}&days=1&api=yes').then(function _callee(res) {\n          var data, manha, tarde, noite, City, Country, Temperature, TemperatureMorning, TemperatureEvening, TemperatureNight, TemperatureMin, TemperatureMax, Rain, Humidity, WeatherIcon;\n          return _regeneratorRuntime.async(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _regeneratorRuntime.awrap(res.data);\n              case 2:\n                data = _context.sent;\n                manha = (data.forecast.forecastday[0].hour[6].temp_c + data.forecast.forecastday[0].hour[7].temp_c + data.forecast.forecastday[0].hour[8].temp_c + data.forecast.forecastday[0].hour[9].temp_c + data.forecast.forecastday[0].hour[10].temp_c + data.forecast.forecastday[0].hour[11].temp_c + data.forecast.forecastday[0].hour[12].temp_c) / 7;\n                _context.next = 6;\n                return _regeneratorRuntime.awrap(data.forecast.forecastday[0].hour[12].temp_c + data.forecast.forecastday[0].hour[13].temp_c + data.forecast.forecastday[0].hour[14].temp_c + data.forecast.forecastday[0].hour[15].temp_c + data.forecast.forecastday[0].hour[16].temp_c + data.forecast.forecastday[0].hour[17].temp_c + data.forecast.forecastday[0].hour[18].temp_c);\n              case 6:\n                _context.t0 = _context.sent;\n                tarde = _context.t0 / 7;\n                noite = (data.forecast.forecastday[0].hour[19].temp_c + data.forecast.forecastday[0].hour[19].temp_c + data.forecast.forecastday[0].hour[20].temp_c + data.forecast.forecastday[0].hour[21].temp_c + data.forecast.forecastday[0].hour[22].temp_c + data.forecast.forecastday[0].hour[23].temp_c + data.forecast.forecastday[0].hour[0].temp_c) / 7;\n                City = Location.data.city;\n                Country = Location.data.country_code;\n                Temperature = res.data.current.temp_c;\n                TemperatureMorning = Math.floor(manha);\n                TemperatureEvening = Math.floor(tarde);\n                TemperatureNight = Math.floor(noite);\n                TemperatureMin = data.forecast.forecastday[0].day.mintemp_c;\n                TemperatureMax = data.forecast.forecastday[0].day.maxtemp_c;\n                Rain = data.forecast.forecastday[0].day.daily_chance_of_rain;\n                Humidity = data.current.humidity;\n                WeatherIcon = ConditionCode;\n                result = [Country, City, Hours, Temperature, TemperatureMin, TemperatureMax, TemperatureMorning, TemperatureEvening, TemperatureNight, Rain, Humidity, WeatherIcon];\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }, null, null, null, Promise);\n        }));\n      case 15:\n        return _context2.abrupt(\"return\", result);\n      case 16:\n      case \"end\":\n        return _context2.stop();\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"names":["getConsultApi","axios","Location","date","Hours","result","latitude","longitude","_regeneratorRuntime","async","getConsultApi$","_context2","prev","next","require","awrap","get","sent","Date","getHours","String","getMinutes","padStart","data","then","_callee","res","manha","tarde","noite","City","Country","Temperature","TemperatureMorning","TemperatureEvening","TemperatureNight","TemperatureMin","TemperatureMax","Rain","Humidity","WeatherIcon","_callee$","_context","forecast","forecastday","hour","temp_c","t0","city","country_code","current","Math","floor","day","mintemp_c","maxtemp_c","daily_chance_of_rain","humidity","ConditionCode","stop","Promise","abrupt"],"sources":["C:/Users/user/Desktop/Kishor/weather-react-native-main/api/ConsultApi.js"],"sourcesContent":["export default async function getConsultApi() {\n\n    const axios = require('axios');\n\n    const Location = await axios.get('https://geolocation-db.com/json/')\n\n    let date = new Date()\n    const Hours = date.getHours() + ':' + String(date.getMinutes()).padStart(2, '0');\n\n    var result = []\n\n    const latitude = await Location.data.latitude\n    const longitude = await Location.data.longitude\n\n    // await axios.get(`https://api.weatherapi.com/v1/forecast.json?key=d194e0f579aff2691e35ce8b7de17092&q=${latitude},${longitude}&days=1&api=yes`)\n    await axios.get('http://api.weatherstack.com/current ? access_key = d194e0f579aff2691e35ce8b7de17092 & q=${latiyude},${longtitude}&days=1&api=yes')\n        .then(async (res) => {\n            const data = await res.data\n            // const ConditionCode = data.current.condition.icon\n\n            let manha = (data.forecast.forecastday[0].hour[6].temp_c\n                + data.forecast.forecastday[0].hour[7].temp_c\n                + data.forecast.forecastday[0].hour[8].temp_c\n                + data.forecast.forecastday[0].hour[9].temp_c\n                + data.forecast.forecastday[0].hour[10].temp_c\n                + data.forecast.forecastday[0].hour[11].temp_c\n                + data.forecast.forecastday[0].hour[12].temp_c)\n                / 7\n\n            let tarde = await (data.forecast.forecastday[0].hour[12].temp_c\n                + data.forecast.forecastday[0].hour[13].temp_c\n                + data.forecast.forecastday[0].hour[14].temp_c\n                + data.forecast.forecastday[0].hour[15].temp_c\n                + data.forecast.forecastday[0].hour[16].temp_c\n                + data.forecast.forecastday[0].hour[17].temp_c\n                + data.forecast.forecastday[0].hour[18].temp_c)\n                / 7\n\n            let noite = (data.forecast.forecastday[0].hour[19].temp_c\n                + data.forecast.forecastday[0].hour[19].temp_c\n                + data.forecast.forecastday[0].hour[20].temp_c\n                + data.forecast.forecastday[0].hour[21].temp_c\n                + data.forecast.forecastday[0].hour[22].temp_c\n                + data.forecast.forecastday[0].hour[23].temp_c\n                + data.forecast.forecastday[0].hour[0].temp_c)\n                / 7;\n\n            const City = Location.data.city\n            const Country = Location.data.country_code\n            const Temperature = res.data.current.temp_c\n            const TemperatureMorning = Math.floor(manha)\n            const TemperatureEvening = Math.floor(tarde)\n            const TemperatureNight = Math.floor(noite)\n            const TemperatureMin = data.forecast.forecastday[0].day.mintemp_c\n            const TemperatureMax = data.forecast.forecastday[0].day.maxtemp_c\n            const Rain = data.forecast.forecastday[0].day.daily_chance_of_rain\n            const Humidity = data.current.humidity\n            const WeatherIcon = ConditionCode\n\n            // Country, City, Hours, Temperature, TemperatureMin, TemperatureMax, TemperatureMorning, TemperatureEvening, TemperatureNight, Rain, Wind\n            result = [Country, City, Hours, Temperature, TemperatureMin, TemperatureMax, TemperatureMorning, TemperatureEvening, TemperatureNight, Rain, Humidity, WeatherIcon]\n        })\n\n    return result\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}